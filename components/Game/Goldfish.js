/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 models\Goldfish.glb --output output\Goldfish.js --transform --keepnames --shadows 
Files: models\Goldfish.glb [155.42KB] > F:\My Documents\Articles Media\AMCOT\Models\Quaternius\Fishing\JSX\output\Goldfish-transformed.glb [36.12KB] (77%)
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

let link = `${process.env.NEXT_PUBLIC_CDN}games/Ocean Rings/player/Goldfish.glb`

// Will load from local public folder instead of CDN
if (process.env.NEXT_PUBLIC_MODEL_SOURCE == "LOCAL") {
    link = `/models/player/Goldfish.glb`
}

export function ModelQuaterniusFishingGoldfish(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF(link)
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Fish_Armature">
          <primitive object={nodes.Main1} />
        </group>
        <group name="Cube001">
          <skinnedMesh name="Cube007" geometry={nodes.Cube007.geometry} material={materials['Material.016']} skeleton={nodes.Cube007.skeleton} />
          <skinnedMesh name="Cube007_1" geometry={nodes.Cube007_1.geometry} material={materials.Goldfish_Fins} skeleton={nodes.Cube007_1.skeleton} />
        </group>
        <group name="Cube025">
          <skinnedMesh name="Cube018" geometry={nodes.Cube018.geometry} material={materials.Goldfish_Main} skeleton={nodes.Cube018.skeleton} />
          <skinnedMesh name="Cube018_1" geometry={nodes.Cube018_1.geometry} material={materials['Material.016']} skeleton={nodes.Cube018_1.skeleton} />
          <skinnedMesh name="Cube018_2" geometry={nodes.Cube018_2.geometry} material={materials.Goldfish_Fins} skeleton={nodes.Cube018_2.skeleton} />
          <skinnedMesh name="Cube018_3" geometry={nodes.Cube018_3.geometry} material={materials.Eyes} skeleton={nodes.Cube018_3.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(link)
